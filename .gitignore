
# Created by https://www.gitignore.io/api/osx,intellij,pycharm,python

### OSX ###
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk


### Intellij ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm

*.iml

## Directory-based project format:
.idea/
# if you remove the above rule, at least ignore the following:

# User-specific stuff:
# .idea/workspace.xml
# .idea/tasks.xml
# .idea/dictionaries
# .idea/shelf

# Sensitive or high-churn files:
# .idea/dataSources.ids
# .idea/dataSources.xml
# .idea/sqlDataSources.xml
# .idea/dynamic.xml
# .idea/uiDesigner.xml

# Gradle:
# .idea/gradle.xml
# .idea/libraries

# Mongo Explorer plugin:
# .idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties


### PyCharm ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm

*.iml

## Directory-based project format:
.idea/
# if you remove the above rule, at least ignore the following:

# User-specific stuff:
# .idea/workspace.xml
# .idea/tasks.xml
# .idea/dictionaries
# .idea/shelf

# Sensitive or high-churn files:
# .idea/dataSources.ids
# .idea/dataSources.xml
# .idea/sqlDataSources.xml
# .idea/dynamic.xml
# .idea/uiDesigner.xml

# Gradle:
# .idea/gradle.xml
# .idea/libraries

# Mongo Explorer plugin:
# .idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties


### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log

# Sphinx documentation
docs/_build/

# PyBuilder
target/

#Ipython Notebook
.ipynb_checkpoints

interpreterOld.zip
mel-spec/code/data.pkl
mel-spec/code/model.ckpt.data-00000-of-00001.tempstate7274280964753079750
mel-spec/code/model.ckpt.index
mel-spec/code/model.ckpt.meta
mel-spec/code/model.final.meta
mel-spec/code/model.final.index
mel-spec/code/model.final.data-00000-of-00001
mel-spec/code/model.ckpt.data-00000-of-00001
mel-spec/code/rezultate.txt
mel-spec/code/rezultateRelu.txt
mel-spec/code/rezultateReluPart2.txt
rezultate.txt
rezultateRelu.txt
mel-spec/code/data.txt
mel-spec/code/generating-sound-with-neural-networks-main/08 Generation with AutoEncoders/code/model/parameters.pkl
mel-spec/code/generating-sound-with-neural-networks-main/08 Generation with AutoEncoders/code/model/weights.h5
mel-spec/code/labels.txt
mel-spec/code/modele antrenate/model.ckpt.data-00000-of-00001
/mel-spec/code/modele antrenate
mel-spec/code/generating-sound-with-neural-networks-main/08 Generation with AutoEncoders/code/data.pkl
mel-spec/code/data.zip
mel-spec/code/model.zip
mel-spec/code/model/weights.weights.h5
mel-spec/code/model/parameters.pkl
mel-spec/code/5data.pkl
mel-spec/code/codeUsedOnVastAi2/autoencoder.py
mel-spec/code/codeUsedOnVastAi2/train.py
mel-spec/code/codeUsedOnVastAi2/trainWithAutoencoder.py
